# To be used with galaxy-helm-repo/galaxy-stable version 2.0.x
# helm install -f <this-file> --version 2.0.2 galaxy-helm-repo/galaxy-stable

# Settings for the init image
init:
  image:
    repository: crs4/galaxy-elixir-is-vc-init
    tag: v18.05-cv0.1
    pullPolicy: IfNotPresent
  force_copy: "__config__,__galaxy-central__,__tools__,__tool-data__"

image:
  repository: crs4/galaxy-web-k8s-elixir-is-vc
  tag: v18.05-cv0.1
  pullPolicy: IfNotPresent

k8s:
  fs_group: 1450
  supp_groups: "1450, 1000, 1001"

#resources:
#  limits:
#    cpu: "1"
#    memory: "1.5G"
#  request:
#    cpu: "0.5"
#    memory: "500m"

admin:
  email: admin@email.co.uk
  password: "change-me"
  api_key: askdhaskjdhqwkdnqdq
  username: admin

galaxy_conf:
  brand: "Elixir IS VarCall"
  admin_users: admin@email.co.uk
  allow_user_creation: true
  allow_user_deletion: true
  cleanup_job: never
  enable_beta_mulled_containers: true

job_conf:
  runners:
    enable_local: "true"
    enable_k8: "true"
    k8s_fs_group_id: "1450"
    k8s_supplemental_group_id: "1450"
  destinations:
    default: "dynamic-k8s-dispatcher"
    no_docker_default: "local_no_container"

persistence:
  storageClass: "-"
  minikube:
    hostPath: "/data/galaxy1_18.05"

service:
  type: NodePort

ingress:
  enabled: false

postgresql:
  imageTag: "9.6.5_for_18.05"
  persistence:
    subPath: "postgres-tertiary"

proftpd:
  enabled: false
  service:
    type: NodePort

rbac:
  enabled: true

# only if running on minikube
galaxy_conf:
  uwsgi:
    threads: 2
  galaxy:
    database_engine_option_pool_size: 2 
